package player{import flash.display.MovieClip;import flash.events.Event;import flash.events.MouseEvent;import flash.text.TextField;import flash.utils.getDefinitionByName;import com.greensock.TweenMax;public class MainMenu extends MovieClip{    private var xml:XML;    public var title:TextField;    public function MainMenu()    {        //this.xml = xml;        //parseXML();		stop();    }			var prefix:String = "";     public function go(xml:XML):void        {            this.xml = xml;						//trace(xml.toString());			var i:int = 0;			if(xml.children().length() == 1)			{				gotoAndStop(1);				//return;			}			else if(xml.children().length() == 2)			{				prefix = "__";				gotoAndStop(2);			}	        else if(xml.children().length()==4)	        {		        gotoAndStop(3);	        }	        else if(xml.children().length()==6)	        {				prefix = "_";		        gotoAndStop(4);	        }	        else	        {		        gotoAndStop(5);	        }						title.text = xml.@title;			for each(var item:XML in xml.children())			{				i++;				this[prefix + "b"+i].label = item.@title;				this[prefix + "b"+i].addEventListener("click", onClick);				this[prefix + "b"+i].selectable = true;			}			addEventListener(Event.CHANGE, onChange);			this[prefix + "b1"].dispatchEvent(new MouseEvent(MouseEvent.CLICK));			visible = true;		}		private function onChange(event):void		{			for (var i=1; i<=8; i++)			{				if(this.hasOwnProperty(prefix + "b"+i) && this[prefix+"b"+i] && event.target.name != this[prefix + "b"+i].name)					this[prefix + "b"+i].selected = false;			}		}		private var lastSection:Section;		private function onClick(event:MouseEvent):void		{			var nr = event.target.name.substring(prefix.length + 1)-1;			trace(xml.children()[nr]);            var classes = [s0, s1, s2, s3, s4];			//var cl = getDefinitionByName("s"+xml.children()[nr].@layout);			var cl = classes[xml.children()[nr].@layout];            var section = new cl();			section.xml = xml.children()[nr];			addChild(section);			section.alpha = 0;			section.x = 50;			TweenMax.to(section, 1, {alpha: 1, x: 0});			if(lastSection)				TweenMax.to(lastSection, 1, {alpha: 0, x: -50});			lastSection = section;		}}}